{"version":3,"sources":["pages/searchPage/SearchPage.tsx","hooks/useRequest.ts","services/CustomAxios.ts","services/RequestHandler.ts","services/APIs.ts","pages/resultPage/ResultPage.tsx","pages/watchPage/WatchPage.tsx","pages/Main.tsx"],"names":["SearchPage","useState","text","setText","history","useHistory","submit","push","Routes","RESULT","className","src","Logo","alt","name","onChange","e","target","value","onKeyDown","key","placeholder","size","onClick","useRequest","APIFunction","params","parser","result","setResult","parsedResult","setParsedResult","error","setError","loading","setLoading","call","useCallback","a","undefined","response","JSON","stringify","useEffect","retry","CustomAxios","axios","create","transformResponse","concat","defaults","data","interceptors","request","use","config","method","toUpperCase","url","Promise","reject","RequestHandler","send","res","errorHandler","status","errorCode","code","message","messageEn","errorObject","API","search","defaultParams","nextPageToken","query","baseURL","timeout","headers","ResultPage","location","useLocation","URLSearchParams","get","setNextPageToken","showingData","setShowingData","updatedData","items","fullScreen","onRetry","pageStart","loadMore","hasMore","threshold","loader","map","item","video","id","videoId","WatchPage","useParams","containerClassName","opts","playerVars","autoplay","Main","currentTheme","StorageService","theme","setTheme","onThemeChange","set","path","ROOT","exact","WATCH"],"mappings":"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","file":"static/js/4.1ffce294.chunk.js","sourcesContent":["import { FC, useState } from \"react\"\nimport Logo from '../../assets/images/logo-mobile.png'\nimport { IoSearchOutline } from 'react-icons/io5'\nimport { useHistory } from \"react-router-dom\";\nimport { Routes } from \"../../constants\";\nimport './SearchPage.scss'\n\ntype Props = {};\n\nconst SearchPage: FC<Props> = () => {\n  const [text, setText] = useState<string>('')\n  const history = useHistory()\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') submit()\n  }\n\n  const submit = () => {\n    if (text !== '') history.push(`${Routes.RESULT}?query=${text}`)\n  }\n\n  return (\n    <div className='search-page-wrapper'>\n      <img className='search-page-logo' src={Logo} alt='logo' />\n      <div className='search-page-search-box'>\n        <input\n          className='search-page-input'\n          name='search'\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setText(e.target.value) }}\n          onKeyDown={onKeyDown}\n          value={text}\n          placeholder='Search'\n        />\n        <IoSearchOutline className='search-page-button' size='2.5rem' onClick={submit} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import { useState, useEffect, useCallback } from 'react';\nimport { TErrorResponse } from '../@types/apiTypes';\n\nconst useRequest = <T, P, E>(APIFunction: (params?: P) => Promise<T>, params?: P, parser?: (response: T) => E) => {\n    const [result, setResult] = useState<T>();\n    const [parsedResult, setParsedResult] = useState<E>();\n    const [error, setError] = useState<TErrorResponse>();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const call = useCallback(async () => {                \n        try {\n            setLoading(true)\n            setError(undefined)\n            const response = await APIFunction(params);\n            setResult(response);\n            if (parser) setParsedResult(parser(response))\n        } catch (error) {\n            setError(error as TErrorResponse);\n        } finally {\n            setLoading(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [APIFunction, JSON.stringify(params), parser])\n\n    useEffect(() => {\n        call();\n    }, [call]);\n\n    return { result, parsedResult, error, loading, retry: call };\n};\n\nexport default useRequest","import axios from \"axios\";\n\nconst CustomAxios = axios.create({\n  transformResponse: [].concat(\n    // @ts-ignore\n    axios.defaults.transformResponse,\n    (data: any) => data\n  ),\n});\n\n\nCustomAxios.interceptors.request.use(async (config) => {\n  const token = 'AIzaSyAaa4h8M8ddzERozjBsPIDxqM0DYNMxr7w'\n  if (config.method?.toUpperCase() === 'GET')\n    config = {\n      ...config,\n      url: config.url + `&key=${token}`\n    }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport default CustomAxios;\n","import { AxiosError, AxiosRequestConfig } from 'axios';\nimport { TErrorResponse } from '../@types/apiTypes';\nimport CustomAxios from './CustomAxios';\n\nconst RequestHandler = {\n    send: async <T>(request: AxiosRequestConfig): Promise<T> => {\n        try {\n            const res = await CustomAxios.request<T>(request)\n            return res.data\n        } catch (e) {\n            return errorHandler(e)\n        }\n    }\n}\n\nconst errorHandler = (e: AxiosError) => {\n    const error: TErrorResponse = {\n        status: e.response?.status || 0,\n        errorCode: e.response?.data?.code || 0,\n        message: e.response?.data?.messageEn || 'API Failed',\n        data: e.response?.data || null,\n        errorObject: e\n    }\n    throw error\n}\n\nexport default RequestHandler","import { AxiosRequestConfig } from \"axios\"\nimport { ERequestType, TSearchResponse } from \"../@types\"\nimport RequestHandler from \"./RequestHandler\"\n\nconst mutualConfig = (method: ERequestType): AxiosRequestConfig => {\n    return {\n        method,\n        baseURL: 'https://youtube.googleapis.com',\n        timeout: 15000,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Cache-Control': 'no-cache',\n        },\n    }\n}\n\nconst API = {\n    search: async (params?: { query: string, nextPageToken?: string }) => {\n        var defaultParams = 'part=id,snippet&order=viewCount&maxResults=30&type=video&eventType=live'\n        if (params?.nextPageToken) defaultParams = defaultParams + `&pageToken=${params.nextPageToken}`\n        const config: AxiosRequestConfig = { url: `/youtube/v3/search?${defaultParams}&q=${params?.query}`, ...mutualConfig('get') }\n        return (await RequestHandler.send<TSearchResponse>(config))\n    },\n}\n\nexport default API","import { FC, useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport useRequest from \"../../hooks/useRequest\";\nimport API from \"../../services/APIs\";\nimport { Loading, TryAgain, VideoThumbnail } from \"../../components\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { TVideo } from \"../../@types\";\nimport './ResultPage.scss'\n\ntype Props = {};\n\nconst ResultPage: FC<Props> = () => {\n  const location = useLocation()\n  const query = new URLSearchParams(location.search).get('query')\n  const [nextPageToken, setNextPageToken] = useState<string>()\n  const [showingData, setShowingData] = useState<TVideo[]>([])\n  const { loading, error, result, retry } = useRequest(API.search, { query: query || '', nextPageToken })\n\n  useEffect(() => {\n    const updatedData = showingData.concat(result?.items || [])\n    setShowingData(updatedData)\n  }, [result])\n\n  const onNext = () => {\n    setNextPageToken(result?.nextPageToken)\n  }\n\n  if (loading && !result) return <Loading fullScreen />\n  if (error) return <TryAgain onRetry={retry} text='Error on loading results' />\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={onNext}\n      hasMore={!loading && !error && !!result?.nextPageToken}\n      threshold={20}\n      loader={<div className='load-more'><Loading /></div>}\n    >\n      <div className='items-wrapper'>\n        {showingData.map(item => <VideoThumbnail key={item.id.videoId} video={item} />)}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default ResultPage;\n","import { FC } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport YouTube from 'react-youtube';\nimport './WatchPage.scss'\n\ntype Props = {};\n\nconst WatchPage: FC<Props> = () => {\n  const { id } = useParams<{ id: string }>()\n\n  return (\n    <div className='watch-wrapper'>\n      <YouTube\n        videoId={id}\n        containerClassName='video-player-container'\n        className='video-player'\n        opts={{ playerVars: { autoplay: 1 } }}\n      />\n    </div>\n  );\n};\n\nexport default WatchPage;\n","import { FC } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Routes } from \"../constants\";\nimport { EThemes } from \"../@types/enums\";\nimport { Header } from \"../components\";\nimport StorageService from \"../services/StorageService\";\nimport SearchPage from \"./searchPage/SearchPage\";\nimport ResultPage from \"./resultPage/ResultPage\";\nimport WatchPage from \"./watchPage/WatchPage\";\nimport './Main.scss'\n\ntype Props = {};\n\nconst Main: FC<Props> = () => {\n  const currentTheme = StorageService.get('THEME', 'light')\n  const [theme, setTheme] = useState<EThemes>(currentTheme as EThemes)\n\n  const onThemeChange = (theme: EThemes) => {\n    StorageService.set('THEME', theme)\n    setTheme(theme)\n  }\n\n  return (\n    <div className={`root theme--${theme}`}>\n      <Header onThemeChange={onThemeChange} />\n      <div className={'body-container'}>\n        <div className={'page-container'}>\n          <Switch>\n            <Route path={Routes.ROOT} exact>\n              <SearchPage />\n            </Route>\n            <Route path={Routes.RESULT} exact>\n              <ResultPage />\n            </Route>\n            <Route path={Routes.WATCH} exact>\n              <WatchPage />\n            </Route>\n            <Route path=\"*\">\n              <div>404 - Not found</div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"sourceRoot":""}